name: CI

on:
  push:
    branches:
      - main
      - Story/SC-1340
    tags:
      - v*
  pull_request:
    branches:
      - "**"
  schedule:
    # Daily at 09:37
    - cron: '37 9 * * *'

env:
  AWS_REGION: us-east-2

jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - name: CPython 3.7.9
            version: 3.7.9
            action: 3.7.9
        arch:
          - name: x64
            action: x64
            matrix: x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Python ${{ matrix.python.name }} ${{ matrix.arch.name }} for Windows
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.action }}
          architecture: ${{ matrix.arch.action }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Poetry and Venv
        run: |
          python3 -m ensurepip
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry==1.5.1
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.path .

          #Setup AWS Connection
          poetry config repositories.epc-power https://epc-power-us-${{ secrets.AWS_ACCOUNT_ID }}.d.codeartifact.us-east-2.amazonaws.com/pypi/epc-power/
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain epc-power-us --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`
          poetry config http-basic.epc-power aws $CODEARTIFACT_AUTH_TOKEN

          poetry config --list
          poetry install

      - name: Package executable
        run: |
          # set the versioning
          poetry run pyinstaller pyinstaller.spec
          poetry build

      - name: Check and report executable version
        shell: python
        run: |
          # this belongs in a test once we get a test suite started

          import subprocess
          import sys

          completed_process = subprocess.run(
              ["dist/sunspecdemo", "--version"],
              capture_output=True,
              check=True,
          )

          sys.stdout.buffer.write(completed_process.stdout)

          unknown = b"unknown"
          assert unknown not in completed_process.stdout, f"{unknown!r} found in above stdout"
          assert b"" == completed_process.stderr, f"stderr not empty: {completed_process.stderr!r}"

      - name: Publish executable
        #only run if a new tag is created
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          poetry publish --repository epc-power
      - name: Archive executable
        uses: actions/upload-artifact@v2
        with:
          name: Sunspecdemo_executable
          path: dist/sunspecdemo.exe

  all:
    name: All
    runs-on: windows-latest
    needs:
      - build
    steps:
      - name: This
        shell: python
        run: |
          import this

defaults:
  run:
    shell: bash
